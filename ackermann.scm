(define (A m n)
	(cond ((= m 0) (+ n 1))
		((= n 0) (A (- m 1) 1))
		(else (A (- m 1) (A m (- n 1))))))

(define (Atable m n x)
	(define (Arow m n x)
		(cond ((= n x) '())
			(else (cons (A m x) (Arow m n (+ x 1))))
		)
	)
	(cond ((= m x) '())
		(else (cons (Arow x n 0) (Atable m n (+ x 1))))
	)
)